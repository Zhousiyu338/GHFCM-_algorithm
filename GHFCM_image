function [GHFCM_Acc,GHFCM_Jaccard,GHFCM_mIoU,GHFCM_u,GHFCM_v,GHFCM_kk1]=GHFCMtu_hanshu(image,I,err,m1,m,n,v1,c)
u=zeros(m,n,c);
kk1=0;%初始迭代次数
d=zeros(m,n,c);
% err=0.01;
T=1000;
tt=clock;
while err>0.0001 && kk1<T
    v=v1;
    for i=1:m
        for j=1:n
            for k=1:c
                d(i,j,k)=(image(i,j)-v(k))^2+0.0001;%欧氏距离
            end
            tp1=0.0;
            for k=1:c
                tp1=tp1+d(i,j,k)^(1/(m1+1));
            end
            for k=1:c
                u(i,j,k)=tp1/d(i,j,k)^(1/(m1+1));%计算隶属度
            end
         end
    end
    for k=1:c
        tp2=0.0;
        tp3=0.0;
         for i=1:m
            for j=1:n
                 tp2=tp2+u(i,j,k)^m1*image(i,j);
                 tp3=tp3+u(i,j,k)^m1;
            end
         end
         v1(k)=tp2/(tp3+0.0001);%计算聚类中心
    end
    %%终止条件
    a=0.0;
    for k=1:c
        a=a+(v(k)-v1(k))^2;
    end
    if   a < 0.0001
         err=0.0001;
    end
    kk1=kk1+1;
end
image2=zeros(m,n);
for i=1:m
    for j=1:n
        if c==2
            if u(i,j,1)>u(i,j,2)
                image2(i,j)=0;%255白色
        else
            image2(i,j)=255;
            end
        end
        if c==3
            if u(i,j,1)>u(i,j,2)&&u(i,j,1)>u(i,j,3)
                image2(i,j)=0;
            elseif u(i,j,2)>u(i,j,1)&&u(i,j,2)>u(i,j,3)
                image2(i,j)=125;
            elseif u(i,j,3)>u(i,j,1)&&u(i,j,3)>u(i,j,2)
                image2(i,j)=255;
            end
        end
        if c==4
            if u(i,j,1)>u(i,j,2)&&u(i,j,1)>u(i,j,3)&&u(i,j,1)>u(i,j,4)
                image2(i,j)=0;
            elseif u(i,j,2)>u(i,j,1)&&u(i,j,2)>u(i,j,3)&&u(i,j,2)>u(i,j,4)
                image2(i,j)=50;
            elseif u(i,j,3)>u(i,j,1)&&u(i,j,3)>u(i,j,2)&&u(i,j,3)>u(i,j,4)
                image2(i,j)=150;
            elseif u(i,j,4)>u(i,j,1)&&u(i,j,4)>u(i,j,2)&&u(i,j,4)>u(i,j,3)
                image2(i,j)=255;
            end
        end
        if c==5
            if u(i,j,1)>u(i,j,2)&&u(i,j,1)>u(i,j,3)&&u(i,j,1)>u(i,j,4)&&u(i,j,1)>u(i,j,5)
                image2(i,j)=32;
            elseif u(i,j,2)>u(i,j,1)&&u(i,j,2)>u(i,j,3)&&u(i,j,2)>u(i,j,4)&&u(i,j,2)>u(i,j,2)
                image2(i,j)=64;
            elseif u(i,j,3)>u(i,j,1)&&u(i,j,3)>u(i,j,2)&&u(i,j,3)>u(i,j,4)&&u(i,j,3)>u(i,j,5)
                image2(i,j)=127;
            elseif u(i,j,4)>u(i,j,1)&&u(i,j,4)>u(i,j,2)&&u(i,j,4)>u(i,j,3)&&u(i,j,4)>u(i,j,5)
                image2(i,j)=191;
            elseif u(i,j,5)>u(i,j,1)&&u(i,j,5)>u(i,j,2)&&u(i,j,5)>u(i,j,3)&&u(i,j,5)>u(i,j,4)
                image2(i,j)=255;
            end
        end
    end
end
figure(4)
imshow(uint8(image2));

  imwrite(uint8(image2),"E:\小论文1\4.5\理想图\6.png");
% I=rgb2gray(I);
[GHFCM_Acc,GHFCM_Jaccard,GHFCM_mIoU]=index_text(I,image2,c);
disp(['GHFCM运行时间:  ',num2str(etime(clock,tt))]);
fprintf('GHFCM运行次数：%.4f\n',kk1);                                                              
disp(['GHFCM in the Jaccard space normalized mutual information:',num2str(GHFCM_Jaccard)]);
disp(['GHFCM in the Acc space accuracy:',num2str(GHFCM_Acc)]);
disp(['GHFCM in the mIoU space accuracy:',num2str(GHFCM_mIoU)]);
GHFCM_kk1=kk1;
GHFCM_u=u;
GHFCM_v=v;
end
